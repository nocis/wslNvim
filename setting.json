{
  "editor.defaultFormatter": "esbenp.prettier-vscode",
  "editor.formatOnSave": true,
  "editor.fontFamily": "0xProto nerd font Mono",
  "editor.fontLigatures": true,
  "editor.acceptSuggestionOnCommitCharacter": false,
  "editor.suggest.selectionMode": "never",

  "window.newWindowDimensions": "inherit",
  
  "zenMode.centerLayout": false,
  "zenMode.hideLineNumbers": false,
  "zenMode.fullScreen": false,
  "zenMode.showTabs": "single",

  // <c-p>:focus on vscode
  // <c-k><z>:zen mode
  // <f11>: fullscreen

  "extensions.experimental.affinity": {
    "asvetliakov.vscode-neovim": 1
  },
  "terminal.integrated.fontFamily": "Hack Nerd Font Mono",
  "terminal.integrated.fontLigatures.enabled": true,
  "workbench.colorTheme": "Tokyo Night Gogh",
  "glassit.alpha": 238,

  "notebook.formatOnSave.enabled": true,

  "[python]": {
    "editor.defaultFormatter": "charliermarsh.ruff"
  },

  "vscode-neovim.useWSL": true,
  "vscode-neovim.wslDistribution": "Ubuntu",
  "vscode-neovim.neovimExecutablePaths.linux": "/opt/nvim/nvim",
  "vscode-neovim.neovimInitVimPaths.linux": "~/.config/nvim/init.lua",
  "vscode-neovim.compositeKeys": {
    "jk": {
      // Use lua to execute any logic
      "command": "vscode-neovim.lua",
      "args": [
        [
          "local code = require('vscode')",
          "code.action('vscode-neovim.escape')",
          "code.action('workbench.action.files.save')"
        ]
      ]
    }
  },
  "vscode-neovim.ctrlKeysForInsertMode": [
    "a",
    "c",
    "d",
    "h",
    "j",
    "m",
    "o",
    "r",
    "t",
    "u",
    "w",
    "k",
    "l",
    "n",
    "p"
  ],
  "vscode-neovim.ctrlKeysForNormalMode": [
    "a",
    "b",
    "c",
    "d",
    "e",
    "f",
    "h",
    "i",
    "j",
    "k",
    "l",
    "m",
    "o",
    "r",
    "t",
    "u",
    "v",
    "w",
    "x",
    "y",
    "z",
    // "/",
    "]",
    "right",
    "left",
    "up",
    "down",
    "backspace",
    "delete"
  ]

  // To spawn multiple cursors from visual line/block modes type ma/mA or mi/mI

  // gd — go to the definition;
  // ctrl + o — get back from the definition;
  // space + d — show the hover with details on the item where the
  //             cursor currently is (from our custom vscode_keymaps.lua);
  // shift + k — if the hover isn’t shown, it shows it.
  //             If the hover is already shown, it focuses on it,
  //             and then you can use vim motions
  //             like j, k, gg, G to scroll through it;
  // space + a — show the quick fix list (from our custom vscode_keymaps.lua).
  //             You can also use ctrl + n and ctrl + p to move through
  //             the list and hit enter to choose the action to perform.

  
  // 2. Windows (PowerShell) extensions workflow：
  //             Machine A:
  //             In the Visual Studio Code PowerShell terminal:

  //             code --list-extensions > extensions.list

  //             Machine B:
  //             Copy extension.list to the machine B
  //             In the Visual Studio Code PowerShell terminal:
  //             cat extensions.list |% { code --install-extension $_}

  // 3. virtual desktop：
  //             nav: Ctrl+Win+left/right
  //             modify: Win+tab

  // 4. md workflow：
  //             preview: ctrl+shift+v
  //             switch: ctrl+1/2
  //             rotate panel: ctrl+q
  //             rotate file: <leader><leader>
  //             close file: ctrl+w, q
}

